// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendAPI.Data;

#nullable disable

namespace backendAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230301085105_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backendAPI.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasBarge")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfCages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("backendAPI.Models.FarmWorkers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("WorkerId");

                    b.ToTable("FarmWorkers");
                });

            modelBuilder.Entity("backendAPI.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CertifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId")
                        .IsUnique();

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("backendAPI.Models.WorkerDesignations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkerDesignations");
                });

            modelBuilder.Entity("backendAPI.Models.FarmWorkers", b =>
                {
                    b.HasOne("backendAPI.Models.Farm", "Farm")
                        .WithMany("Workers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backendAPI.Models.Worker", "Worker")
                        .WithMany("FarmWorkers")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("backendAPI.Models.Worker", b =>
                {
                    b.HasOne("backendAPI.Models.WorkerDesignations", "WorkerDesignations")
                        .WithOne("Worker")
                        .HasForeignKey("backendAPI.Models.Worker", "DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkerDesignations");
                });

            modelBuilder.Entity("backendAPI.Models.Farm", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("backendAPI.Models.Worker", b =>
                {
                    b.Navigation("FarmWorkers");
                });

            modelBuilder.Entity("backendAPI.Models.WorkerDesignations", b =>
                {
                    b.Navigation("Worker")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
